[
  {
    "Id": "PlantAnApp.PdfAutoSigner.ApplyIntermediateSignature",
    "TypeStr": "PlantAnApp.Integrations.CloudPdfSign.Actions.ApplyIntermediateSignature,PlantAnApp.Integrations.CloudPdfSign",
    "Conditions": [
      {
        "TypeStr": "PlantAnApp.Dnn.Config.Conditions.IsForModule, PlantAnApp.Dnn",
        "Settings": {
          "AppCodes": ["AFORM", "AGRID"]
        }
      }
    ],
    "Title": {
      "default": "Apply Intermediate Signature"
    },
    "Parameters": [
      {
        "Id": "UserNeedsEnrolment",
        "Type": "Text",
        "Title": {
          "default": "User Needs Enrolment"
        },
        "HelpText": {
          "default": "Can be obtained from the Enrol User action. Required field. This field supports Tokens."
        }
      },
      {
        "Id": "ExternalId",
        "Type": "Text",
        "Title": {
          "default": "External ID"
        },
        "HelpText": {
          "default": "External ID that identifies the user, Required field. This field supports Tokens."
        }
      },
      {
        "Id": "FileIdentifier",
        "Title": {
          "default": "PDF file indentifier"
        },
        "HelpText": {
          "default": "Can provide multiple file IDs sepparated by ';'. Required field. This field supports Tokens."
        },
        "Type": "Select",
        "Settings": {
          "DataSource": "PortalFiles",
          "SupportsExpressions": "true"
        }
      },
      {
        "Id": "TncFileIdentifier",
        "Title": {
          "default": "Terms and Conditions file indentifier"
        },
        "HelpText": {
          "default": "Required only if the user needed enrolment. This field supports Tokens."
        },
        "Type": "Select",
        "Settings": {
          "DataSource": "PortalFiles",
          "SupportsExpressions": "true"
        }
      },
      {
        "Id": "Folder",
        "Title": {
          "default": "Folder"
        },
        "HelpText": {
          "default": "Where the files from this action will be stored."
        },
        "Type": "Select",
        "Settings": {
          "DataSource": "PortalFolderList",
          "SupportsExpressions": "true"
        }
      },
      {
        "Id": "SignReason",
        "Type": "Text",
        "Title": {
          "default": "Sign Reason"
        },
        "HelpText": {
          "default": "Required field. This field supports Tokens."
        }
      },
      {
        "Id": "SignLocation",
        "Type": "Text",
        "Title": {
          "default": "Sign Location"
        },
        "HelpText": {
          "default": "Required field. This field supports Tokens. "
        }
      },
      {
        "Id": "SignerName",
        "Type": "Text",
        "Title": {
          "default": "Signer Name"
        },
        "HelpText": {
          "default": "Required field. This field supports Tokens. "
        }
      },
      {
        "Id": "SignatureFontSize",
        "Type": "Text",
        "Title": {
          "default": "Signature Font Size"
        },
        "HelpText": {
          "default": "Default signature size will be 10 if nothing is provided. This field supports Tokens. "
        }
      },
      {
        "Id": "SignaturePageNumber",
        "Type": "Text",
        "Title": {
          "default": "Signature Page Number"
        },
        "HelpText": {
          "default": "If no page number is provided, the document will be signed on the last page. This field supports Tokens. "
        }
      },
      {
        "Id": "SignatureFieldName",
        "Type": "Text",
        "Title": {
          "default": "Signature Field Name"
        },
        "HelpText": {
          "default": "This field supports Tokens. "
        }
      },
      {
        "Id": "LowerLeftX",
        "Type": "Text",
        "Title": {
          "default": "Signature Lower Left X coordinate"
        },
        "HelpText": {
          "default": "This field supports Tokens. "
        }
      },
      {
        "Id": "LowerLeftY",
        "Type": "Text",
        "Title": {
          "default": "Signature Lower Left Y coordinate"
        },
        "HelpText": {
          "default": "This field supports Tokens. "
        }
      },
      {
        "Id": "UpperRightX",
        "Type": "Text",
        "Title": {
          "default": "Signature Upper Right X"
        },
        "HelpText": {
          "default": "This field supports Tokens. "
        }
      },
      {
        "Id": "UpperRightY",
        "Type": "Text",
        "Title": {
          "default": "Signature Upper Right Y"
        },
        "HelpText": {
          "default": "This field supports Tokens. "
        }
      },
      {
        "Id": "DocumentTitle",
        "Type": "Text",
        "Title": {
          "default": "Document Title"
        },
        "HelpText": {
          "default": "If multiple documents are provided to the action, multiple documents titles can be provided in a comma separated format. Required field. This field supports Tokens. "
        }
      },
      {
        "Id": "BlankSignedFileIdOutputToken",
        "Type": "Text",
        "Title": {
          "default": "Blank Signed FileId Output Token"
        },
        "HelpText": {
          "default": "Output token where the file ID or file IDs sepparated by ';' will be stored."
        }
      },
      {
        "Id": "SessionId",
        "Type": "Text",
        "Title": {
          "default": "SessionId Output Token"
        },
        "HelpText": {
          "default": "Output token where the session ID will be stored."
        }
      },
      {
        "Id": "SignatureFieldNameOutputToken",
        "Type": "Text",
        "Title": {
          "default": "Signature Field Name Output Token"
        },
        "HelpText": {
          "default": "If no signature field was provided in the previous parameters, the action will generate one which will be output in this token."
        }
      },
      {
        "Id": "OnError",
        "Title": {
          "default": "On Error"
        },
        "Type": "ActionList",
        "HelpText": {
          "default": "Define a list of actions that should execute when this action's result is Error. You can see the error message in [Presign:Error]."
        },
        "Settings": {
          "Event": "anError"
        }
      }
    ]
  }
]
